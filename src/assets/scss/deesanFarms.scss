@import 'deesan-frams-scss/variable';
@import 'deesan-frams-scss/_cards';
@import 'deesan-frams-scss/home';
@import 'deesan-frams-scss/navbar';

#app {
  font-family: Montserrat, Helvetica Neue, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  // text-align: center;
  color: #2c3e50;
}

.parallax {
  /* Set a specific height */
  height: $primary-parallax-height;

  /* Create the parallax scrolling effect */
  background-attachment: fixed;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  filter: brightness(0.8);
}

.parallax-container {
  position: relative;
  display: flex;
  flex-direction: column;
}

.sibling {
  position: absolute;
  width: 100%;
  height: 100%;
  background: $gradient-effect-top;
}

.parallax-sibling {
  @extend .sibling;
}

.bg-color {
  background-color: $primary-color;
}

/* SCSS properties for Split view */

.split-title {
  font-family: $title-font-family;
  font-weight: 700;
}

.split-image-align-left {
  width: 100%;
  object-fit: cover;
  height: 300px;
  padding: 5px;
  border-radius: 30px;
  -webkit-box-shadow: $image-box-shadow;
  box-shadow: $image-box-shadow;
  background-size: cover;
}

.draw {
  transition: color 0.25s;

  &::before,
  &::after {
    // Set border to invisible, so we don't see a 4px border on a 0x0 element before the transition starts
    border: 2px solid transparent;
    width: 0;
    height: 0;
  }

  // This covers the top & right borders (expands right, then down)
  &::before {
    top: 0;
    left: 0;
  }

  // And this the bottom & left borders (expands left, then up)
  &::after {
    bottom: 0;
    right: 0;
  }

  &:hover {
    color: $primary-text-color;
  }

  // Hover styles
  &:hover::before,
  &:hover::after {
    width: 100%;
    height: 100%;
  }

  &:hover::before {
    border-top-color: $primary-text-color; // Make borders visible
    border-right-color: $primary-text-color;
    transition: width 0.25s ease-out,
      // Width expands first
        height 0.25s ease-out 0.25s; // And then height
  }

  &:hover::after {
    border-bottom-color: $primary-text-color; // Make borders visible
    border-left-color: $primary-text-color;
    transition: border-color 0s ease-out 0.5s,
      // Wait for ::before to finish before showing border
        width 0.25s ease-out 0.5s,
      // And then exanding width
        height 0.25s ease-out 0.75s; // And finally height
  }
}

.meet {
  &:hover {
    color: $primary-text-color;
  }

  // Start ::after in same position as ::before
  &::after {
    top: 0;
    left: 0;
  }

  // Change colors
  &:hover::before {
    border-top-color: $primary-text-color;
    border-right-color: $primary-text-color;
  }

  &:hover::after {
    border-bottom-color: $primary-text-color;
    border-left-color: $primary-text-color;
    transition: // Animate height first, then width height 0.25s ease-out,
      width 0.25s ease-out 0.25s;
  }
}

.step-in {
  background: linear-gradient(
    to bottom right,
    rgba(0, 162, 255, 0.1) 5%,
    rgba(0, 162, 255, 0.7) 5%,
    rgba(0, 162, 255, 0.3) 26%,
    rgba(0, 162, 255, 0.7) 45%,
    rgba(0, 162, 255, 0.3) 65%,
    rgba(0, 162, 255, 0.7) 95%,
    rgba(0, 162, 255, 0.1) 95%
  );
}

.contact-color {
  background: $primary-color;
  color: $primary-text-color;
}

.text-align {
  text-align: center;
  margin-top: 50px;
  text-decoration: underline;
}

.contact-container {
  @extend .contact-color;
  padding: 10px;
  border-radius: 10px;
  height: 100%;
}

.table-align {
  margin-top: calc(10%);
  color: $primary-text-color !important;
}

.slide-enter-active {
  animation: slide-in 2s ease-out forwards;
}

@keyframes slide-in {
  from {
    transform: translateY(20px);
  }
  to {
    transform: translateY(0);
  }
}

@media screen and (min-width: 768px) {
  .table-align {
    margin-top: calc(30%);
  }
}

@media screen and (max-width: 768px) {
  .map-container {
    padding-top: 20px;
  }
}
